# docker-compose.yml

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2023-10-16T04-13-43Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - '9000'
    - '9001'
  environment:
    MINIO_ROOT_USER: structurify
    MINIO_ROOT_PASSWORD: structurify
  healthcheck:
    test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
    interval: 30s
    timeout: 20s
    retries: 3

version: '3.8'
services:
  postgres-writer:
    image: bitnami/postgresql:16
    restart: always
    user: root
    environment:
      - POSTGRESQL_PASSWORD=root
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./infra/postgresql/writer-data:/bitnami/postgresql
      - ./infra/postgresql/init:/docker-entrypoint-initdb.d/
    ports:
      - '6432:5432'
    networks:
      - app-tier

  postgres-reader:
    image: bitnami/postgresql:16
    restart: always
    depends_on:
      - postgres-writer
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=postgres-writer
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - '6433:5432'
    networks:
      - app-tier

  gotrue:
    image: supabase/gotrue:v2.107.0
    restart: unless-stopped
    depends_on:
      - postgres-writer
    ports:
      - '9999:9999'
      - '9100:9100'
    environment:
      - GOTRUE_SITE_URL=http://localhost:8000
      - GOTRUE_JWT_SECRET=6fd43811-9d30-4c6e-8628-1cb49449a9a6
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_OPERATOR_TOKEN=structurify
      - GOTRUE_DB_MIGRATIONS_PATH=/go/src/github.com/supabase/gotrue/migrations
      - GOTRUE_DB_DRIVER=postgres
      - DATABASE_URL=postgres://gotrue:gotrue@postgres-writer:5432/gotrue
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_LOG_FILE=/var/log/go/gotrue.log
      - API_EXTERNAL_URL=http://localhost:9999
      - PORT=9999
    networks:
      - app-tier

  cache:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
    networks:
      - app-tier

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - app-tier

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - app-tier

  tracing:
    image: jaegertracing/all-in-one:latest
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    networks:
      - app-tier

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '9000:9000'
      - '9001:9001'
    depends_on:
      - minio1
      - minio2
    networks:
      - app-tier

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1030:1025
      - 8030:8025
    healthcheck:
      test: ['CMD', 'echo | telnet 127.0.0.1 8025']
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      MH_STORAGE: maildir
    volumes:
      - ./infra/mailhog/data:/maildir
    networks:
      - app-tier

  meilisearch:
    image: getmeili/meilisearch
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-structurify}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - ${MEILI_PORT:-7700}:7700
    volumes:
      - ./infra/meilisearch/data.ms:/data.ms
    restart: unless-stopped
    networks:
      - app-tier

volumes:
  cache:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

networks:
  app-tier:
    driver: bridge
